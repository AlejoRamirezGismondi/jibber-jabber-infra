version: "3.8"

volumes:
  userdata:
  postdata:

services:
  user-db:
    container_name: docker-database-user
    image: postgres:12
    restart: always
    env_file:
      - .env.production
    volumes:
      - userdata:/var/lib/postgresql/data

  post-db:
    container_name: docker-database-post
    image: postgres:12
    restart: always
    env_file:
      - .env.production
    volumes:
      - postdata:/var/lib/postgresql/data

  api-user-jj:
    container_name: api-user-jj
    image: docker.pkg.github.com/alejoramirezgismondi/jibber-jabber-user/user:latest
    entrypoint: ["java", "-jar", "-Dspring.profiles.active=production","/app/spring-boot-application.jar"]
    env_file:
      - .env.production
    depends_on:
      - user-db

#  api-post-jj:
#    container_name: api-post-jj
#    image: docker.pkg.github.com/alejoramirezgismondi/jibber-jabber-post/post:latest
#    entrypoint: ["java", "-jar", "-Dspring.profiles.active=production","/app/spring-boot-application.jar"]
#    env_file:
#      - .env.production
#    depends_on:
#      - post-db

  web-jj:
    container_name: web-jj
    image: docker.pkg.github.com/alejoramirezgismondi/jibber-jabber-web/web-prod:latest

  reverse-proxy:
    container_name: "jibber-jabber-reverse-proxy"
    image: nginx
    depends_on:
      web-jj:
        condition: service_started
      api-user-jj:
        condition: service_started
#      - api-post-jj
    ports:
      - 80:80
    volumes:
      - ./.nginx/nginx.conf:/etc/nginx/nginx.conf:ro
